!!ARBvp1.0

PARAM mvp[4] = { state.matrix.mvp };
PARAM transform[4] = { state.matrix.program[0].inverse };

PARAM light = program.env[0];
PARAM camera = program.env[1];
PARAM time = program.env[2];

ATTRIB xyz = vertex.attrib[0];
ATTRIB normal = vertex.attrib[1];
ATTRIB tangent = vertex.attrib[2];
ATTRIB binormal = vertex.attrib[3];
ATTRIB st = vertex.attrib[4];

TEMP dir, transform_light, transform_camera;

DP4 result.position.x, mvp[0], xyz;
DP4 result.position.y, mvp[1], xyz;
DP4 result.position.z, mvp[2], xyz;
DP4 result.position.w, mvp[3], xyz;

DP4 transform_light.x, transform[0], light;
DP4 transform_light.y, transform[1], light;
DP4 transform_light.z, transform[2], light;
DP4 transform_light.w, transform[3], light;

DP4 transform_camera.x, transform[0], camera;
DP4 transform_camera.y, transform[1], camera;
DP4 transform_camera.z, transform[2], camera;
DP4 transform_camera.w, transform[3], camera;

SUB dir, transform_light, xyz;
DP3 dir.w, dir, dir;
RSQ dir.w, dir.w;
MUL dir.xyz, dir, dir.w;

DP3 result.texcoord[1].x, tangent, dir;
DP3 result.texcoord[1].y, binormal, dir;
DP3 result.texcoord[1].z, normal, dir;

SUB dir, transform_light, xyz;
ADD dir, transform_camera, dir;
DP3 dir.w, dir, dir;
RSQ dir.w, dir.w;
MUL dir.xyz, dir, dir.w;

DP3 result.texcoord[2].x, tangent, dir;
DP3 result.texcoord[2].y, binormal, dir;
DP3 result.texcoord[2].z, normal, dir;

MAD result.texcoord[0], st, 2, time;
MOV result.texcoord[0].z, time.z;

END
